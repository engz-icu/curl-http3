# This is a basic workflow to help you get started with Actions

name: gnutls

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: dep
        run: |
         sudo apt update -y
         sudo apt upgrade -y
         sudo apt-get install lzip
         sudo apt-get install -y gnulib
         sudo apt-get install -y gperf
         sudo apt-get install -y autopoint
         sudo apt-get install -y autogen
         git clone --depth 1 https://gitlab.com/gnutls/gnutls.git
         wget https://ftp.gnu.org/gnu/nettle/nettle-3.7.3.tar.gz
         tar zxvf nettle-3.7.3.tar.gz
         cd nettle-3.7.3
         ./configure --prefix=/usr --enable-static --enable-mini-gmp
         sudo make
         sudo make install
         sudo chmod -v 755 /usr/lib64/lib{hogweed,nettle}.so && install -v -m755 -d /usr/share/doc/nettle-3.7.3 && install -v -m644 nettle.html /usr/share/doc/nettle-3.7.3
         cd
         cd /home/runner/work/curl-http3/curl-http3/gnutls
         export NETTLE_CFLAGS="-I/usr/include/nettle" NETTLE_LIBS="-L/usr/lib64 -lnettle" HOGWEED_CFLAGS="-I/usr/include/nettle" HOGWEED_LIBS="-L/usr/lib64 -lhogweed" P11_KIT_CFLAGS="-I/usr/include/p11-kit-1/p11-kit" P11_KIT_LIBS="-L/usr/lib -lp11-kit" LIBTASN1_CFLAGS="-I/usr/include" LIBTASN1_LIBS="-L/usr/lib -ltasn1" LIBIDN2_CFLAGS="-I/usr/include" LIBIDN2_LIBS="-L/usr/lib -lidn2" GMP_CFLAGS="-I/usr/local/include" GMP_LIBS="-L/usr/local/lib -lgmp"
         ./configure --prefix=/usr --docdir=/usr/share/doc/gnutls-3.7.2 --disable-guile --with-included-unistring
         sudo ./bootstrap
         sudo ./configure --prefix=/home/gnutls
         sudo make
         sudo make install

      # Runs a set of commands using the runners shell
      - name: nghttp3 tcp2
        run: |
          cd ..
          git clone https://github.com/ngtcp2/nghttp3
          cd nghttp3
          autoreconf -i
          sudo ./configure --prefix=/home/nghttp3 --enable-lib-only
          sudo make
          sudo make install
          cd ..
          git clone https://github.com/ngtcp2/ngtcp2
          cd ngtcp2
          autoreconf -i
          sudo ./configure PKG_CONFIG_PATH=/home/ngtcp2/lib/pkgconfig:<somewhere2>/lib/pkgconfig LDFLAGS="-Wl,-rpath,<somewhere1>/lib" --prefix=<somewhere3> --enable-lib-only --with-gnutls
          sudo make
          sudo make install
          
      - name: curl
        run: |
          cd ..
          git clone https://github.com/curl/curl
          cd curl
          sudo ./buildconf
          sudo ./configure --without-openssl --with-gnutls=/home/gnutls --with-nghttp3=/home/nghttp3 --with-ngtcp2=/home/ngtcp2
          sudo make
          
      - name: test
        run: |
          curl --http3 https://cloudflare.com
          curl --alt-svc altsvc.cache https://quic.aiortc.org/
